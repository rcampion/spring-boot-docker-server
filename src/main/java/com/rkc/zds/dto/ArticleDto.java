package com.rkc.zds.dto;
// Generated Feb 4, 2019 12:58:44 AM by Hibernate Tools 5.3.6.Final

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PcmArticles generated by hbm2java
 */
@Entity
@Table(name = "PCM_ARTICLES")
public class ArticleDto implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="ID", unique = true)
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer id;
	@Column(name="USER_ID")		
	private Integer userId;
	@Column(name="SLUG")		
	private String slug;
	@Column(name="TITLE")	
	private String title;
	@Column(name="DESCRIPTION")	
	private String description;
	@Column(name="BODY")	
	private String body;
	@Column(name="CREATED_AT")	
	private Timestamp createdAt;
	@Column(name="UPDATED_AT")	
	private Timestamp updatedAt;

	private String tags;
	


	public ArticleDto() {
	}

	public ArticleDto(int id) {
		this.id = id;
	}

	public ArticleDto(Integer id, Integer userId, String slug, String title, String description, String body,
			Timestamp createdAt, Timestamp updatedAt) {
		this.id = id;
		this.userId = userId;
		this.slug = slug;
		this.title = title;
		this.description = description;
		this.body = body;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public ArticleDto(String title2, String description2, String body2, String[] tagList, Integer id2) {
		// TODO Auto-generated constructor stub
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public String getSlug() {
		return this.slug;
	}

	public void setSlug(String slug) {
		this.slug = slug;
	}

	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getBody() {
		return this.body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	public Timestamp getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Timestamp createdAt) {
		this.createdAt = createdAt;
	}

	public Timestamp getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Timestamp updatedAt) {
		this.updatedAt = updatedAt;
	}

	public void update(String title, String description, String body) {
		this.title = title;
		this.description = description;
		this.body = body;
		
	}
	
    public String toSlug(String title) {
        return title.toLowerCase().replaceAll("[\\&|[\\uFE30-\\uFFA0]|\\’|\\”|\\s\\?\\,\\.]+", "-");
    }
/*    
	@OneToMany(cascade = {CascadeType.ALL, CascadeType.REMOVE}, orphanRemoval = true, fetch = FetchType.EAGER)
    @JoinColumn(name = "articleId", referencedColumnName = "id")
	@ElementCollection(targetClass=ArticleCommentDto.class)
    @JsonProperty("comments")
    private List<ArticleCommentDto> comments = new ArrayList<ArticleCommentDto>();

	public List<ArticleCommentDto> getComments() {
		return comments;
	}

	public void setComments(List<ArticleCommentDto> comments) {
		this.comments = comments;
	}
*/	
	public String getTags() {
		return tags;
	}

	public void setTags(String tags) {
		this.tags = tags;
	}
	
	@OneToMany(cascade = {CascadeType.ALL, CascadeType.REMOVE}, orphanRemoval = true, fetch = FetchType.EAGER)
    @JoinColumn(name = "articleId", referencedColumnName = "id")
	@ElementCollection(targetClass=ArticleTagArticleDto.class)
    @JsonProperty("tagList")
    private List<ArticleTagArticleDto> tagList = new ArrayList<ArticleTagArticleDto>();

	public List<ArticleTagArticleDto> getTagList() {
		return tagList;
	}

	public void setTagList(List<ArticleTagArticleDto> tagList) {
		this.tagList = tagList;
	}
}
